{
   "title": "Cross-Domain Orchestration",
   "sidebar": [
      {
         "name": "stage1",
         "label": "Intent-Based SRTE"
      },
      {
         "name": "stage2",
         "label": "SR-MPLS DC Interconnect"
      },
      {
         "name": "stage3",
         "label": "DC Orchestration"
      },
      {
         "name": "stage4",
         "label": "E2E Service Orchestration"
      },
      {
         "name": "stage5",
         "label": "E2E Service Intent"
      }
   ],
   "preface": [
      {
         "title": "Demo Introduction",
         "stepDesc": "Intro",
         "bodyArr": [
            "The goal of this demo is explaining the orchestration of a hypothetical end to end transport slice for an N3 interface, leveraging NSO and the T-SDN and DC-SDN core function packs.",
            "<img height='400' width='1000' src='/assets/pref_intro.png' class='center'/>",
            "The focus is scalability, simplicity, and capabilities of the data center integration between APIC/ACI and network transport leveraging the new ACI SR handoff and the transport segment routing traffic engineering.",
            "<img height='400' width='1000' src='/assets/pref_intro_cfp.png' class='center'/>"
         ]
      },
      {
         "title": "Intent-Based SRTE",
         "stepDesc": "1. SRTE ODN",
         "bodyArr": [
            "Segment Routing provides a stateless architecture by encoding the policy in the packet header as opposed to states in the fabric.",
            "The SR policy is called unified and end-to-end because it respectively integrates topological and service instructions, and it spans end-to-end from DC to the metro to the backbone.",
            "<img height='400' width='600' src='/assets/pref_odn.png'/><img height='400' width='600' src='/assets/pref_automated_steering.png'/>",
            "SR provides drastic simplification through protocol elimination (LDP, RSVP-TE).The ODN solution is a key achievement of the SR-TE innovation. The heart of the business of a network operator is to support services, and hence we needed to focus the solution on the service and not on the transport.",
            "The RSVP-TE solution built complex meshes of pre-configured tunnels and then had lots of difficulties steering traffic into the RSVP tunnels.<p>With On-Demand Next Hop (ODN) (and its support for automatic steering), the solution is natural: the service routes are tagged and the related SR Policies are automatically instantiated and used for steering.",
            "<u>The operation is focused on the service intent, not on the underlying transport.</u>"
         ]
      },
      {
         "stepDesc": "2. DC Interconnect",
         "title": "SR-MPLS DC Interconnect",
         "bodyArr": [
            "Prior to APIC Release 5.0(1), when setting up an ACI fabric connecting the ACI border leaf nodes to a data center provider edge (DC-PE), multi-tenancy would require multiple VRFs and a routing protocol for each VRF. You would also need to dedicate an interface (physical interface or logical) for each VRF. This solution is called IP handoff, NSO SDN-DC CFP supports this construct and it addresses the automation complexity but a more scalable solution is required for larger data centers.",
            "<img height='350' width='800' src='/assets/pref_dc_interconnect.png' src='/assets/pref_odn.png' class='center'/>",
            "SR handoff has been designed for scale, a single control plane session (MP-BGP EVPN) and data plane session are used for all VRFs, rather than having per-VRF sessions that you would have to use in the IP handoff configuration.",
            "The BGP Label Unicast (BGP LU) address-family is used for the underlay label exchange. The MP-BGP EVPN address-family carries the prefix and MPLS label per VRF information.",
            "Better scalability and simplified automation are the initial benefits, as we can now extend intent signaling in the route being advertised (as colored BGP extended community)."
         ]
      },
      {
         "stepDesc": "3. DC Tenant",
         "title": "DC Orchestration",
         "bodyArr": [
            "DC core function pack (CFP) is simple and is use-case driven instead of exposing all knobs of APIC/ACI and  without the need to understand the details of ACI specific configuration model.",
            "The list below summarizes the initial ACI services that have been modeled in the initial release of the DC CFP, and this demo demonstrates a tenant orchestration and security management using NSO.",
            "<img height='400' width='600' src='/assets/pref_dc_orch.png'/><img height='400' width='600' src='/assets/pref_dc_tenant.png'/>"
         ]
      },
      {
         "stepDesc": "4. Service Orchestration",
         "title": "End to End Service Orchestration",
         "bodyArr": [
            "An end to end transport slice comprises of many attributes and using the DC-CFP and T-SDN CFP, we can easily orchestrate two key elements:",
            "▻ End to end connectivity, leveraging a common overlay VPN and ACI SR Handoff",
            "▻ Transport forwarding behaviour to fulfill the service intent/SLA",
            "<img height='400' width='1000' src='/assets/pref_e2e.png' class='center'/>",
            "In this stage, we are going to focus on the connectivity by creating an end to end L3VPN overlay stitched to ACI SR handoff to extend the previously created tenant.",
            "The demo splits these two steps to show the flexibility of the solution but we expect real implementations to specify the intent creating the service."
         ]
      },
      {
         "stepDesc": "5. Service Intent",
         "title": "End to End Service Intent",
         "bodyArr": [
            "The service can be further enriched with an intent by coloring the advertised service routes with a special BGP community that will trigger the SRTE ODN templates (distributed at the beginning of this demo).",
            "<img height='400' width='1000' src='/assets/pref_e2e_intent.png' class='center'/>",
            "▻ No change is required on the traffic engineering configuration",
            "▻ ODN templates are dynamically triggered by the service route color",
            "▻ The edge router request the SR_PCE a suitable path to fulfill the requested intent",
            "▻ Dynamic SRTE policies are instantiated and decommissioned, following the proposed path (no legacy pre-provisioned full-mesh of policy)",
            "▻ Overlay traffic is dynamically steered in created SRTE policy"
         ]
      }
   ],
   "endpoints": {
      "NSO_CFS": {
         "baseURL": "http://127.0.0.1:38080/nso",
         "username": "admin",
         "password": "admin",
         "headers": {
            "Authorization": "Basic YWRtaW46YWRtaW4=",
            "Content-Type": "application/yang-data+json",
            "Accept": "application/yang-data+json"
         }
      },
      "NSO_RFS_DC": {
         "baseURL": "http://127.0.0.1:38081/nso",
         "headers": {
            "Authorization": "Basic YWRtaW46YWRtaW4=",
            "Content-Type": "application/yang-data+json",
            "Accept": "application/yang-data+json"
         }
      },
      "NSO_RFS_DC_TRANSPORT": {
         "baseURL": "http://127.0.0.1:38082/nso",
         "headers": {
            "Authorization": "Basic YWRtaW46YWRtaW4=",
            "Content-Type": "application/yang-data+json",
            "Accept": "application/yang-data+json"
         }
      }
   },
   "mainContent": {
      "stage1": {
         "description": [
            "With On-Demand Next Hop (ODN) (and its support for automatic steering), the solution is natural: the ",
            "service routes are tagged and the related SR Policies are automatically instantiated and used for steering.",
            "<p></p>This demo's stage deploys stateless SRTE ODN templates on the transport edge routes (PEs) that are ",
            "programmed to request the SR-PCE a path minimizing on latency, and to program a dynamic SRTE LSP",
            "for a route that has been colored with the intent specified in the template."
         ],
         "continueOnFail": false,
         "preCheck": [],
         "actions": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "SRTE ODN templates",
               "description": "Create ODN templates as stateless SRTE object on the network edge devices, ready to trigger SRTE policies.",
               "url": "/restconf/data/cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template=URLLC",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-sr-te-cfp-sr-odn:odn-template": {
                     "name": "URLLC",
                     "head-end": [
                        {
                           "name": "Node_1"
                        },
                        {
                           "name": "Node_10"
                        }
                     ],
                     "color": 1000,
                     "dynamic": {
                        "metric-type": "latency",
                        "pce": {}
                     }
                  }
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "headerColor": "green",
               "title": "ODN templates in ready state",
               "description": "Validate that asynchronous ODN templates have been distributed through the network by the service reaching a ready state",
               "interval": "2000",
               "maxRetry": "10",
               "url": "/restconf/data/cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template-plan=URLLC/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            }
         ],
         "postCheck": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Commit",
               "headerColor": "green",
               "title": "Show commit changes for ODN template instrumentation",
               "description": "Show configuration commit changes on network PE routers demonstrate the simplicity of instrumenting the network with intent-based policy. This example illustrates how to program an ODN template that will request the PCE a path minimizing latency when a route is colored with a 1000 community.",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show configuration commit changes last 1" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "ODN",
               "headerColor": "green",
               "title": "Check SR-TE On-Demand-Color database",
               "description": "Validate that an ODN template for color 1000 has been programmed and ready to trigger for BGP routes that has been colored with the special extended-community color 1000.",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "data": {
                  "input": { "args": "show segment-routing traffic-eng on-demand color detail" }
               },
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "On-Demand Color: 1000"
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "SRTE",
               "headerColor": "green",
               "title": "Validation SRTE table - expected empty",
               "description": "ODN templates haven't been triggered and there should be no SRTE policy active",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show segment-routing traffic-eng policy tabular" }
               }
            }
         ],
         "outcome": {
            "summaryText": "Transport network programmed to support requests for minimum delay intents",
            "elements": {
               "nodes": [
                  {
                     "data": { "id": "gNodeB_1", "label": "gNodeB" },
                     "position": { "x": -150, "y": 150 },
                     "classes": "antenna"
                  },
                  {
                     "data": { "id": "Node_1", "label": "Node_1" },
                     "position": { "x": 0, "y": 150 },
                     "classes": "highlight router"
                  },
                  {
                     "data": { "id": "Node_3", "label": "Node_3" },
                     "position": { "x": 100, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_4", "label": "Node_4" },
                     "position": { "x": 100, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_5", "label": "Node_5" },
                     "position": { "x": 200, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_6", "label": "Node_6" },
                     "position": { "x": 200, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_7", "label": "Node_7" },
                     "position": { "x": 300, "y": 150 },
                     "classes": "labelRight router"
                  },
                  {
                     "data": { "id": "Node_8", "label": "Node_8" },
                     "position": { "x": 400, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_9", "label": "Node_9" },
                     "position": { "x": 400, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_10", "label": "Node_10" },
                     "position": { "x": 500, "y": 150 },
                     "classes": "highlight router"
                  },
                  {
                     "data": { "id": "ACI_DC", "label": "ACI_DC" },
                     "position": { "x": 700, "y": 150 },
                     "classes": "size-xxlg dc"
                  },
                  {
                     "data": { "id": "UPF", "label": "UPF" },
                     "position": { "x": 800, "y": 150 },
                     "classes": "upf"
                  },
                  {
                     "data": { "id": "SR_PCE", "label": "SR_PCE" },
                     "position": { "x": -100, "y": 0 },
                     "classes": "size-lg sr_pce"
                  },
                  {
                     "data": { "id": "APIC", "label": "APIC" },
                     "position": { "x": 700, "y": 0 },
                     "classes": "size-lg apic"
                  }
               ],
               "edges": [
                  {
                     "data": { "source": "Node_1", "target": "Node_3" }
                  },
                  {
                     "data": { "source": "Node_1", "target": "Node_4" }
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_5" }
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_6" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_5" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_6" }
                  },
                  {
                     "data": { "source": "Node_5", "target": "Node_7" }
                  },
                  {
                     "data": { "source": "Node_5", "target": "Node_8" }
                  },
                  {
                     "data": { "source": "Node_6", "target": "Node_7" }
                  },
                  {
                     "data": { "source": "Node_6", "target": "Node_9" }
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_8" }
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_9" }
                  },
                  {
                     "data": { "source": "Node_8", "target": "Node_10" }
                  },
                  {
                     "data": { "source": "Node_9", "target": "Node_10" }
                  }
               ]
            },
            "commands": {
               "Node_1": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng on-demand color detail",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng on-demand color detail" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng policy tabular",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show configuration commit changes last 1",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show configuration commit changes last 1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show running-config segment-routing",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show running-config segment-routing" }
                     }
                  }
               ],
               "Node_10": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng on-demand color detail",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng on-demand color detail" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng policy tabular",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show configuration commit changes last 1",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show configuration commit changes last 1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show running-config segment-routing",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show running-config segment-routing" }
                     }
                  }
               ],
               "SR_PCE": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show pce lsp summary",
                     "url": "/restconf/operations/devices/device=SR_PCE/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show pce lsp summary" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show pce ipv4 peer",
                     "url": "/restconf/operations/devices/device=SR_PCE/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show pce ipv4 peer" }
                     }
                  }
               ],
               "gNodeB_1": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to UPF (deployed in ACI DC)",
                     "url": "/restconf/operations/devices/device=gNodeB_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf ran 99.100.40.2" }
                     }
                  }
               ],
               "UPF": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to remote gNodeB",
                     "url": "/restconf/operations/devices/device=UPF/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.1.112.112" }
                     }
                  }
               ]
            }
         }
      },
      "stage2": {
         "description": [
            "SR handoff has been designed for scale, a single control plane session (MP-BGP EVPN), and a data plane",
            "session is used for all VRFs, rather than having per-VRF sessions that you would have to use in the",
            "IP handoff configuration.",
            "<p></p>The BGP Label Unicast (BGP LU) address-family is used for the underlay label exchange.",
            "<p></p>The MP-BGP EVPN address-family carries the prefix and MPLS label per VRF information."
         ],
         "continueOnFail": false,
         "preCheck": [],
         "actions": [
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "Infrastructure SR DC interconnect (EVPN & BGP-LU control planes)",
               "description": "The infrastructure SR interconnect comprises of the EVPN overlay and BGP-LU underlay providing the stitching between the transport and DC.",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-dc-transport:dc-transport-network": [
                     {
                        "name": "DC-PE-Network",
                        "topology": {
                           "topology-settings": {
                              "sr-global-block": {
                                 "start": 16000,
                                 "end": 17000
                              },
                              "route-target-auto-base": 200,
                              "dc-attributes": {
                                 "sid-pool": "sid-pool",
                                 "route-target-pool": "route-target-pool",
                                 "evpn-loopback-ip-pool": "evpn-lo-ip-pool",
                                 "dc-controller": [
                                    {
                                       "id": "APIC_1",
                                       "bgp-as": 64513,
                                       "border-leaf": [
                                          {
                                             "leaf": 101,
                                             "router-id": "10.0.8.65"
                                          }
                                       ]
                                    }
                                 ]
                              },
                              "pe-attributes": {
                                 "pe-device": [
                                    {
                                       "id": "Node_10",
                                       "bgp-as": 64512,
                                       "evpn-loopback-id": 0,
                                       "evpn-loopback-ip": "1.1.1.10"
                                    }
                                 ]
                              }
                           },
                           "interconnect": [
                              {
                                 "name": "APIC_1-unprotected",
                                 "traffic-handoff": "cisco-dc-transport:sr-hand-off",
                                 "dc-controller": "APIC_1",
                                 "connection": [
                                    {
                                       "name": "Node_10-leaf_101",
                                       "dc-end": {
                                          "border-leaf": 101,
                                          "port": {
                                             "port-config-service-name": "Slice_Demo_L3_out",
                                             "interface": "1/4"
                                          }
                                       },
                                       "pe-end": {
                                          "pe-device": "Node_10",
                                          "port": {
                                             "if-type": "TenGigE",
                                             "if-id": "0/0/0/8"
                                          }
                                       }
                                    }
                                 ]
                              }
                           ],
                           "dct-evpn-interconnect": [
                              {
                                 "name": "APIC_1-unprotected",
                                 "evpn-settings": {
                                    "ipv4-subnet-policy": {
                                       "ip-address-pool": "intercon-pool"
                                    }
                                 },
                                 "dc-attributes": {
                                    "bgp-lu": {
                                       "peer-control": "defaultValue"
                                    }
                                 },
                                 "pe-attributes": {
                                    "pe-device": [
                                       {
                                          "device": "Node_10"
                                       }
                                    ]
                                 },
                                 "connection": [
                                    {
                                       "name": "Node_10-leaf_101",
                                       "dc-end": {},
                                       "pe-end": {}
                                    }
                                 ]
                              }
                           ]
                        }
                     }
                  ]
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "Infrastructure SR DC interconnect in ready state",
               "description": "Validate that Infrastructure SR DC interconnect successfully deployed (Ready State)",
               "interval": "2000",
               "maxRetry": "20",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/topology/dct-evpn-interconnect-plan=APIC_1-unprotected/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            }
         ],
         "postCheck": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Commit",
               "headerColor": "green",
               "title": "Show commit changes dc interconnect (DCI XR side - Node_10)",
               "description": "Show configuration commit changes on DCI router to enable the SR DC interconnect",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show configuration commit changes last 1" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "ODN",
               "headerColor": "green",
               "title": "Validate EVPN and BGP_LU control plane state",
               "description": "Validate that two new BGP sessions have been established (one of the overlay EVPN and the second for underlay BGP_LU)",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show bgp neighbor brief" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "NSO pools",
               "headerColor": "green",
               "title": "Validate NSO allocated address resource-pools",
               "description": "DC-SDN CFP supports allocation of IP addresses for the interconnect (i.e. DCI transport and ACI EVPN lookback)",
               "displayResponseAs": "json",
               "url": "/restconf/data/resource-pools/ipaddress-allocator:ip-address-pool",
               "method": "get",
               "expect": []
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "NSO pools",
               "headerColor": "green",
               "title": "Validate NSO allocated IDs resource-pools",
               "description": "DC-SDN CFP supports allocation of IDs and in this context, allocated a SID-ID for the SR interconnect",
               "displayResponseAs": "json",
               "url": "/restconf/data/resource-pools/id-allocator:id-pool",
               "method": "get",
               "expect": []
            }
         ],
         "outcome": {
            "summaryText": "Transport and ACI domain stitched with infrastructure SR handoff",
            "elements": {
               "nodes": [
                  {
                     "data": { "id": "gNodeB_1", "label": "gNodeB_1" },
                     "position": { "x": -150, "y": 150 },
                     "classes": "antenna"
                  },
                  {
                     "data": { "id": "Node_1", "label": "Node_1" },
                     "position": { "x": 0, "y": 150 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_3", "label": "Node_3" },
                     "position": { "x": 100, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_4", "label": "Node_4" },
                     "position": { "x": 100, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_5", "label": "Node_5" },
                     "position": { "x": 200, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_6", "label": "Node_6" },
                     "position": { "x": 200, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_7", "label": "Node_7" },
                     "position": { "x": 300, "y": 150 },
                     "classes": "labelRight router"
                  },
                  {
                     "data": { "id": "Node_8", "label": "Node_8" },
                     "position": { "x": 400, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_9", "label": "Node_9" },
                     "position": { "x": 400, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_10", "label": "Node_10" },
                     "position": { "x": 500, "y": 150 },
                     "classes": "highlight router"
                  },
                  {
                     "data": { "id": "ACI_DC", "label": "ACI_DC" },
                     "position": { "x": 750, "y": 150 },
                     "classes": "highlight size-4xlg dc1"
                  },
                  {
                     "data": { "id": "UPF", "label": "UPF" },
                     "position": { "x": 900, "y": 150 },
                     "classes": "upf"
                  },
                  {
                     "data": { "id": "SR_PCE", "label": "SR_PCE" },
                     "position": { "x": -100, "y": 0 },
                     "classes": "size-lg sr_pce"
                  },
                  {
                     "data": { "id": "APIC", "label": "APIC" },
                     "position": { "x": 750, "y": 0 },
                     "classes": "size-lg apic"
                  }
               ],
               "edges": [
                  {
                     "data": { "source": "Node_1", "target": "Node_3" }
                  },
                  {
                     "data": { "source": "Node_1", "target": "Node_4" }
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_5" }
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_6" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_5" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_6" }
                  },
                  {
                     "data": { "source": "Node_5", "target": "Node_7" }
                  },
                  {
                     "data": { "source": "Node_5", "target": "Node_8" }
                  },
                  {
                     "data": { "source": "Node_6", "target": "Node_7" }
                  },
                  {
                     "data": { "source": "Node_6", "target": "Node_9" }
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_8" }
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_9" }
                  },
                  {
                     "data": { "source": "Node_8", "target": "Node_10" }
                  },
                  {
                     "data": { "source": "Node_9", "target": "Node_10" }
                  },
                  {
                     "data": { "source": "Node_10", "target": "ACI_DC" }
                  },
                  {
                     "data": { "label": "EVPN", "source": "Node_10", "target": "ACI_DC" },
                     "classes": "curve-multiple dashed highlight"
                  },
                  {
                     "data": { "label": "BGP_LU", "source": "Node_10", "target": "ACI_DC" },
                     "classes": "curve-multiple dashed highlight"
                  }
               ]
            },
            "commands": {
               "Node_10": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "title": "Validate EVPN and BGP_LU control plane state",
                     "description": "Validate that two new BGP sessions have been establised (one of the overlay EVPN and the second for underlay BGP_LU)",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp neighbor brief" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "title": "Show EVPN loopback bgp route details",
                     "description": "ACI EVPN loopback and SR label is leaned via the BGP_LU",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp 100.100.2.1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "header": "Commit",
                     "headerColor": "green",
                     "title": "Show commit changes dc interconnect (DCI XR side - Node_10)",
                     "description": "Show configuration commit changes on DCI router to enable the SR DC interconnect",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show configuration commit changes last 1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "title": "Retrive full BGP configuration",
                     "description": "Full BGP configuration",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "data": {
                        "input": { "args": "show running-config router bgp" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_CFS",
                     "header": "NSO pools",
                     "headerColor": "green",
                     "title": "Validate NSO allocated address resource-pools",
                     "description": "DC-SDN CFP supports allocation of IP addresses for the interconnect (i.e. DCI transport and ACI EVPN lookback)",
                     "displayResponseAs": "json",
                     "url": "/restconf/data/resource-pools/ipaddress-allocator:ip-address-pool",
                     "method": "get",
                     "expect": []
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_CFS",
                     "header": "NSO pools",
                     "headerColor": "green",
                     "title": "Validate NSO allocated IDs resource-pools",
                     "description": "DC-SDN CFP supports allocation of IDs and in this context, allocated a SID-ID for the SR interconnect",
                     "displayResponseAs": "json",
                     "url": "/restconf/data/resource-pools/id-allocator:id-pool",
                     "method": "get",
                     "expect": []
                  }
               ],
               "gNodeB_1": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to UPF (deployed in ACI DC)",
                     "url": "/restconf/operations/devices/device=gNodeB_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf ran 99.100.40.2" }
                     }
                  }
               ],
               "UPF": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to remote gNodeB",
                     "url": "/restconf/operations/devices/device=UPF/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.1.112.112" }
                     }
                  }
               ]
            }
         }
      },
      "stage3": {
         "description": [
            "DC core function pack (CFP) is simple and is use-case driven instead of exposing all knobs of APIC/ACI",
            "and without the need to understand the details of ACI specific configuration model.",
            "<p></p>The use case presented in this stage is tenant management with the creation of a tenant, VRF, BD,",
            "two distinct EPGs, and a contract to regulate the traffic permitted between the two endpoint groups.",
            "<p></p>In this initial phase, we are achieving intra-DC connectivity and we will enhance the tenant",
            "in a later stage with an SR l3out EPG to achieve an end to end connectivity to the remote gNodeB."
         ],
         "continueOnFail": false,
         "preCheck": [],
         "actions": [
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "APIC/ACI tenant",
               "description": "TBA",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:tenant-service",
               "method": "patch",
               "expect": [],
               "data": {
                  "cisco-dc:tenant-service": [
                     {
                        "name": "Toyota",
                        "vrf": [
                           {
                              "name": "VRF_Toyota"
                           }
                        ],
                        "application-profile": [
                           {
                              "name": "AP-Toyota",
                              "epg": [
                                 {
                                    "name": "EPG-1_Toyota",
                                    "bridge-domain": "BD_Toyota",
                                    "epg-contract": [
                                       {
                                          "name": "CONTRACT_Toyota",
                                          "type": "consumed"
                                       }
                                    ],
                                    "port-config": [
                                       {
                                          "name": "demo_policies_access",
                                          "leaf-id": 101,
                                          "interface-id": "1/6",
                                          "vlan": 40
                                       }
                                    ]
                                 },
                                 {
                                    "name": "EPG-2_Toyota",
                                    "bridge-domain": "BD_Toyota",
                                    "epg-contract": [
                                       {
                                          "name": "CONTRACT_Toyota",
                                          "type": "provided"
                                       }
                                    ],
                                    "port-config": [
                                       {
                                          "name": "demo_policies_access",
                                          "leaf-id": 102,
                                          "interface-id": "1/6",
                                          "vlan": 40
                                       }
                                    ]
                                 }
                              ]
                           }
                        ],
                        "bridge-domain": [
                           {
                              "name": "BD_Toyota",
                              "bd-subnet": [
                                 {
                                    "address": "99.100.40.1/29"
                                 }
                              ],
                              "vrf": "VRF_Toyota"
                           }
                        ],
                        "filters": [
                           {
                              "name": "Filter_Toyota",
                              "filter-entries": [
                                 {
                                    "filter-entry-name": "arp",
                                    "etherT": "arp"
                                 },
                                 {
                                    "filter-entry-name": "http",
                                    "protocol": "tcp",
                                    "source-port": {
                                       "from-port": "http",
                                       "to-port": "http"
                                    }
                                 },
                                 {
                                    "filter-entry-name": "icmp",
                                    "protocol": "icmp"
                                 }
                              ]
                           }
                        ],
                        "contract": [
                           {
                              "name": "CONTRACT_Toyota",
                              "scope": "global",
                              "filter-group": [
                                 {
                                    "name": "FG_Toyota",
                                    "apply-both-directions": [null],
                                    "filters": [
                                       {
                                          "filter": "Filter_Toyota",
                                          "action": "permit"
                                       }
                                    ]
                                 }
                              ]
                           }
                        ]
                     }
                  ]
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI Toypta tennant in ready state",
               "description": "Validate that APIC/ACI Toyota tenant has been successfully deplioyed (Ready State)",
               "interval": "2000",
               "maxRetry": "20",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:tenant-service-plan=Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            }
         ],
         "postCheck": [
            {
               "type": "request",
               "header": "Validation",
               "headerColor": "green",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-stats:output.result",
               "title": "Check connectivity from UPF to Backend",
               "url": "/restconf/operations/devices/device=UPF/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "ping vrf vlan_40 99.100.40.3" }
               }
            }
         ],
         "outcome": {
            "summaryText": "ACI demo tenant deployed, providing connectivity between different end point groups validated by contract",
            "elements": {
               "nodes": [
                  { "data": { "id": "Tenant_Toyota", "label": "Tenant: Toyota" } },
                  { "data": { "id": "VRF_Toyota", "label": "VRF: VRF_Toyota", "parent": "Tenant_Toyota" } },
                  {
                     "data": {
                        "id": "Bridge_Domain:_BD_Toyota",
                        "label": "Bridge Domain: BD_Toyota",
                        "parent": "VRF_Toyota"
                     }
                  },
                  {
                     "data": { "id": "CONTRACT_Toyota", "label": "CONTRACT Toyota", "parent": "Bridge_Domain:_BD_Toyota" },
                     "position": { "x": 400, "y": 300 },
                     "classes": "labelLeft size-xlg contract"
                  },
                  {
                     "data": { "id": "EPG-1_Toyota", "label": "EPG-1 Toyota", "parent": "Bridge_Domain:_BD_Toyota" },
                     "position": { "x": 500, "y": 200 },
                     "classes": "labelLeft size-xlg epg"
                  },
                  {
                     "data": { "id": "EPG-2_Toyota", "label": "EPG-2 Toyota", "parent": "Bridge_Domain:_BD_Toyota" },
                     "position": { "x": 500, "y": 400 },
                     "classes": "labelLeft size-xlg epg"
                  },
                  {
                     "data": { "id": "UPF", "label": "UPF" },
                     "position": { "x": 700, "y": 200 },
                     "classes": "size-xlg highlight upf"
                  },
                  {
                     "data": { "id": "Backend", "label": "Backend" },
                     "position": { "x": 700, "y": 400 },
                     "classes": "size-xlg highlight storage"
                  },
                  { "data": { "id": "APIC", "label": "APIC" }, "position": { "x": 100, "y": 100 }, "classes": "size-xlg apic" }
               ],
               "edges": [
                  { "data": { "source": "EPG-1_Toyota", "target": "UPF" } },
                  { "data": { "source": "EPG-2_Toyota", "target": "Backend" } },
                  { "data": { "source": "CONTRACT_Toyota", "target": "EPG-1_Toyota" } },
                  { "data": { "source": "CONTRACT_Toyota", "target": "EPG-2_Toyota" } }
               ]
            },
            "commands": {
               "UPF": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to Backend",
                     "url": "/restconf/operations/devices/device=UPF/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.100.40.3" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to Bridge Domain",
                     "url": "/restconf/operations/devices/device=UPF/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.100.40.1" }
                     }
                  }
               ],
               "Backend": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to UPF",
                     "url": "/restconf/operations/devices/device=Backend/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.100.40.2" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to Bridge Domain",
                     "url": "/restconf/operations/devices/device=Backend/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.100.40.1" }
                     }
                  }
               ]
            }
         }
      },
      "stage4": {
         "description": [
            "After validating intra DC connectivity, we can extend our service end to end by:",
            "▻ Creating a tenant SR l3out EPG that leverage the infrastructure SR Handoff previously created to be stitched to the transport infrastructure.",
            "▻ Creating a service overlay toward the remote sites or datacenters.",
            "▻ Simple and scalable usage of L3VPN transport infrastructure and SR Handoff, EVPN sessions to stitch the transport and ACI domain."
         ],
         "continueOnFail": false,
         "preCheck": [],
         "actions": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "Remote site route-policy (placeholder for service intent)",
               "description": "Creating a route-policy that will be used for the L3VPN overlay in the next step. This demo specifies the service intent, in a separate stage will demonstrate how simple it is to request a new transport behavior without changing the transport configuration but in a real implementation, it will be set when the slice is created.",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:l3vpn-route-policy=RP-VRF_Toyota",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-flat-L3vpn-fp:l3vpn-route-policy": {
                     "name": "RP-VRF_Toyota"
                  }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "L3VPN overlay remote site",
               "description": "Configuring the remote site (i.e. RAN site) of an end to end L3VPN overlay, that will serve the Toyota slice",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:flat-L3vpn=VRF_Toyota",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-flat-L3vpn-fp:flat-L3vpn": {
                     "name": "VRF_Toyota",
                     "endpoint": [
                        {
                           "endpoint-name": "Node_1_gNodeB_1",
                           "access-pe": "Node_1",
                           "if-type": "TenGigE",
                           "if-id": "0/0/2/1",
                           "vlan-id": 52,
                           "pe-ip-addr": "99.1.112.1/24",
                           "as-no": 64512,
                           "vrf": {
                              "vrf-definition": "VRF_Toyota",
                              "address-family": [
                                 {
                                    "address-family": "ipv4",
                                    "redistribute-connected": [null],
                                    "vpn-target": [
                                       {
                                          "rt-value": "100:101",
                                          "rt-type": "both"
                                       }
                                    ]
                                 }
                              ]
                           },
                           "sr-te": {
                              "route-policy": "RP-VRF_Toyota"
                           }
                        }
                     ]
                  }
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "headerColor": "green",
               "title": "L3VPN remote site in ready state",
               "description": "Validate that L3VPN Overlay configuration for the Toyota Slice has reached the ready state",
               "interval": "2000",
               "maxRetry": "10",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:flat-L3vpn-plan=VRF_Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "APIC/ACI Tenant l3out route-policy (initially without intent)",
               "description": "APIC/ACI tenant l3out configuration requires a route-policy to identify the IP routes to advertise. BGP communities (including the color for specifying an intent) are optional and will be specified in the next stage of this demo for demonstration purposes only.",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:dc-route-policy=outbound-rmap",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-dc:dc-route-policy": [
                     {
                        "name": "outbound-rmap",
                        "tenant": "Toyota",
                        "rules-set": {
                           "match-rules": [
                              {
                                 "name": "matchrule1",
                                 "route-destination-ip": [
                                    {
                                       "ip": "99.100.40.0/29"
                                    }
                                 ]
                              }
                           ],
                           "set-rules": [
                              {
                                 "name": "rule1"
                              }
                           ]
                        },
                        "route-policy": [
                           {
                              "profile": "outbound-rmap",
                              "match-and-set-group": [
                                 {
                                    "set-rules": "rule1",
                                    "order": "0",
                                    "action": "permit",
                                    "match-rules": [
                                       {
                                          "name": "matchrule1"
                                       }
                                    ]
                                 }
                              ]
                           }
                        ]
                     }
                  ]
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI Tenant l3out route-policy in ready state",
               "description": "Validate that APIC/ACI Tenant l3out route-policy has reached the ready state",
               "interval": "2000",
               "maxRetry": "20",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:dc-route-policy-plan=outbound-rmap/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "APIC/ACI Tenant l3out using the SR interconnect",
               "description": "Creating APIC/ACI Toyota tenant l3out that leverages the infrastructure SR DC interconnect created in the previous stage",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/tenant=Toyota",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-dc-transport:tenant": [
                     {
                        "name": "Toyota",
                        "dct-l3-vpn": [
                           {
                              "name": "VRF_Toyota",
                              "type": "sr-mpls",
                              "address-family": [
                                 {
                                    "address-family": "ipv4"
                                 }
                              ],
                              "pe-attributes": {
                                 "address-family": [
                                    {
                                       "address-family": "ipv4",
                                       "vpn-target": [
                                          {
                                             "rt-value": "100:101",
                                             "rt-type": "both"
                                          }
                                       ]
                                    }
                                 ],
                                 "pe-device": [
                                    {
                                       "device": "Node_10",
                                       "address-family": [
                                          {
                                             "address-family": "ipv4",
                                             "redistribute-connected": {},
                                             "redistribute-static": {}
                                          }
                                       ]
                                    }
                                 ]
                              },
                              "interconnect": [
                                 {
                                    "name": "APIC_1-unprotected",
                                    "dc-attributes": {
                                       "export-route-policy": "outbound-rmap"
                                    }
                                 }
                              ]
                           }
                        ]
                     }
                  ]
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI Tenant l3out in ready state",
               "description": "Validate that APIC/ACI Tenant l3out using SR interconnect has reached the ready state",
               "interval": "2000",
               "maxRetry": "20",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/tenant=Toyota/dct-l3-vpn-plan=VRF_Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI DC controller l3out-security-service name",
               "description": "DC controller generates a dynamic name for the l3out-security-service, which is required for the next configuraiton steps. This value can be retrieved, from the tenant' state",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/tenant=Toyota/dct-l3-vpn=VRF_Toyota/modified",
               "method": "get",
               "expect": [],
               "match": {
                  "objectPath": "cisco-dc-transport:modified.services",
                  "regEx": "name='VRF_Toyota-([A-Za-z0-9]+)'",
                  "matchGroup": 1,
                  "storeAs": "l3out-security-service"
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Create",
               "headerColor": "#007cad",
               "title": "APIC/ACI Tenant l3out security",
               "description": "As the last step in the creation of a tenant l3out is the creation of a l3out EPG and contract update to support the end to end traffic. NOTE - here we need to assure that the l3out-security-service name is correct capturing the dynamic name with /restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/tenant=Toyota/dct-l3-vpn=VRF_Toyota/modified/services",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/l3out-security-service=VRF_Toyota-{{l3out-security-service}}",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-dc:l3out-security-service": {
                     "name": "VRF_Toyota-{{l3out-security-service}}",
                     "l3out-routing-service": "APIC_1-unprotected-evpn",
                     "l3out-type": {
                        "sr-mpls-vrf-l3out": [null]
                     },
                     "tenant": "Toyota",
                     "bridge-domain": "BD_Toyota",
                     "border-leaf": [
                        {
                           "node-id": 101,
                           "external-epg": [
                              {
                                 "name": "L3OUT-APIC_1-unprotected-evpn",
                                 "prefix": [
                                    {
                                       "address": "0.0.0.0/0"
                                    }
                                 ],
                                 "contract": [
                                    {
                                       "name": "CONTRACT_Toyota",
                                       "type": "provided",
                                       "application-epg": {
                                          "app-profile": "AP-Toyota",
                                          "app-epg": "EPG-1_Toyota"
                                       }
                                    }
                                 ]
                              }
                           ]
                        }
                     ]
                  }
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI tenant l3out security in ready state",
               "description": "Validate that Tenant l3out security (egp and contract) has reached the ready state",
               "interval": "2000",
               "maxRetry": "20",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/l3out-security-service-plan=VRF_Toyota-{{l3out-security-service}}/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            }
         ],
         "postCheck": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "headerColor": "green",
               "title": "Remote PE (Node_1) slice overlay BGP table",
               "description": "Check remote (Node_1) slice overlay BGP table for ACI Toyota tennant",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show bgp vrf VRF_Toyota 99.100.40.0/29" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Connectivity",
               "headerColor": "green",
               "title": "Validation of connectivity: gNodeB to UPF",
               "description": "",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-stats:output.result",
               "url": "/restconf/operations/devices/device=gNodeB_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "ping vrf ran 99.100.40.2" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "SRTE",
               "headerColor": "green",
               "title": "Validation SRTE table (RAN side) - expected still empty as no intent requested",
               "description": "ODN templates haven't been triggered yet because we decided to request the slice intent in the next stage and there should be no SRTE policy active (i.e. on the remote L3VPN overlay peer)",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show segment-routing traffic-eng policy color 1000 tabular" }
               }
            }
         ],
         "outcome": {
            "summaryText": "End to end connectivity between remote RAN site and UPF (best effort intent)",
            "elements": {
               "nodes": [
                  {
                     "data": { "id": "Overlay", "label": "Overlay" },
                     "position": { "x": 400, "y": -100 },
                     "classes": "size-xxxlg-rect l3vpn"
                  },
                  {
                     "data": { "id": "gNodeB_1", "label": "gNodeB_1" },
                     "position": { "x": -150, "y": 150 },
                     "classes": "size-lg, highlight antenna"
                  },
                  {
                     "data": { "id": "Node_1", "label": "Node_1" },
                     "position": { "x": 0, "y": 150 },
                     "classes": "size-lg router"
                  },
                  {
                     "data": { "id": "Node_3", "label": "Node_3" },
                     "position": { "x": 100, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_4", "label": "Node_4" },
                     "position": { "x": 100, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_5", "label": "Node_5" },
                     "position": { "x": 200, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_6", "label": "Node_6" },
                     "position": { "x": 200, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_7", "label": "Node_7" },
                     "position": { "x": 300, "y": 150 },
                     "classes": "labelRight router"
                  },
                  {
                     "data": { "id": "Node_8", "label": "Node_8" },
                     "position": { "x": 400, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_9", "label": "Node_9" },
                     "position": { "x": 400, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_10", "label": "Node_10" },
                     "position": { "x": 500, "y": 150 },
                     "classes": "size-lg router"
                  },
                  {
                     "data": { "id": "ACI_DC", "label": "ACI_DC" },
                     "position": { "x": 750, "y": 150 },
                     "classes": "size-4xlg dc1"
                  },
                  {
                     "data": { "id": "UPF", "label": "UPF" },
                     "position": { "x": 900, "y": 150 },
                     "classes": "size-lg highlight upf"
                  },
                  {
                     "data": { "id": "SR_PCE", "label": "SR_PCE" },
                     "position": { "x": -100, "y": 0 },
                     "classes": "size-lg sr_pce"
                  },
                  {
                     "data": { "id": "APIC", "label": "APIC" },
                     "position": { "x": 750, "y": 0 },
                     "classes": "size-lg apic"
                  }
               ],
               "edges": [
                  {
                     "data": { "source": "Node_1", "target": "Node_3" }
                  },
                  {
                     "data": { "source": "Node_1", "target": "Node_4" }
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_5" }
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_6" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_5" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_6" }
                  },
                  {
                     "data": { "source": "Node_5", "target": "Node_7" }
                  },
                  {
                     "data": { "source": "Node_5", "target": "Node_8" }
                  },
                  {
                     "data": { "source": "Node_6", "target": "Node_7" }
                  },
                  {
                     "data": { "source": "Node_6", "target": "Node_9" }
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_8" }
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_9" }
                  },
                  {
                     "data": { "source": "Node_8", "target": "Node_10" }
                  },
                  {
                     "data": { "source": "Node_9", "target": "Node_10" }
                  },
                  {
                     "data": { "source": "gNodeB_1", "target": "Node_1" }
                  },
                  {
                     "data": { "source": "Node_10", "target": "ACI_DC" }
                  },
                  {
                     "data": { "label": "EVPN", "source": "Node_10", "target": "ACI_DC" },
                     "classes": "curve-multiple dashed"
                  },
                  {
                     "data": { "label": "BGP_LU", "source": "Node_10", "target": "ACI_DC" },
                     "classes": "curve-multiple dashed"
                  },
                  {
                     "data": { "source": "ACI_DC", "target": "UPF" }
                  },
                  {
                     "data": { "source": "Node_1", "target": "Overlay" },
                     "classes": "dashed"
                  },
                  {
                     "data": { "source": "Node_10", "target": "Overlay" },
                     "classes": "dashed"
                  }
               ]
            },
            "commands": {
               "Node_1": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota 99.100.40.0/29 (ACI tenant route)",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota 99.100.40.0/29" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng policy tabular",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show configuration commit changes last 1",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show configuration commit changes last 1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show running-config segment-routing",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show running-config segment-routing" }
                     }
                  }
               ],
               "Node_10": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp l2vpn evpn",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp l2vpn evpn" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota 99.100.40.0/29 (ACI tenant route)",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota 99.100.40.0/29" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota 99.1.112.0/24 (RAN side route)",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota 99.1.112.0/24" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng policy tabular",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show configuration commit changes last 1",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show configuration commit changes last 1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show running-config segment-routing",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show running-config segment-routing" }
                     }
                  }
               ],
               "SR_PCE": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show pce lsp",
                     "url": "/restconf/operations/devices/device=SR_PCE/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show pce lsp" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show pce ipv4 peer",
                     "url": "/restconf/operations/devices/device=SR_PCE/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show pce ipv4 peer" }
                     }
                  }
               ],
               "gNodeB_1": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to UPF (deployed in ACI DC)",
                     "url": "/restconf/operations/devices/device=gNodeB_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf ran 99.100.40.2" }
                     }
                  }
               ],
               "UPF": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to remote gNodeB",
                     "url": "/restconf/operations/devices/device=UPF/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.1.112.112" }
                     }
                  }
               ]
            }
         }
      },
      "stage5": {
         "description": [
            "A service intent can be finally requested by coloring the advertised service routes with a special BGP community that will trigger the SRTE ODN templates. ",
            "▻ No change is required on the traffic engineering configuration.",
            "▻ ODN templates are dynamically triggered by the service route color.",
            "▻ The edge router request the SR_PCE a suitable path to fulfill the requested intent.",
            "▻ Dynamic SRTE policies are instantiated and decommissioned, following the SR_PCE computed path.",
            "▻ Overlay traffic is dynamically steered in created SRTE policy."
         ],
         "continueOnFail": false,
         "preCheck": [],
         "actions": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Update",
               "headerColor": "#007cad",
               "title": "Overlay remote site requesting a low-latency intent",
               "description": "TBA",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:l3vpn-route-policy=RP-VRF_Toyota",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-flat-L3vpn-fp:l3vpn-route-policy": {
                     "name": "RP-VRF_Toyota",
                     "color": [
                        {
                           "id": 1000,
                           "ipv4": {
                              "prefix": ["99.1.112.0/24"]
                           }
                        }
                     ]
                  }
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "headerColor": "green",
               "title": "L3VPN Overlay in ready state",
               "description": "Validate L3VPN Overlay service in ready state",
               "interval": "2000",
               "maxRetry": "10",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:flat-L3vpn-plan=VRF_Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Update",
               "headerColor": "#007cad",
               "title": "APIC/ACI service requesting a low-latency intent",
               "description": "",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:dc-route-policy=outbound-rmap",
               "method": "put",
               "expect": [],
               "data": {
                  "cisco-dc:dc-route-policy": [
                     {
                        "name": "outbound-rmap",
                        "tenant": "Toyota",
                        "rules-set": {
                           "match-rules": [
                              {
                                 "name": "matchrule1",
                                 "route-destination-ip": [
                                    {
                                       "ip": "99.100.40.0/29"
                                    }
                                 ]
                              }
                           ],
                           "set-rules": [
                              {
                                 "name": "rule1",
                                 "metric": {
                                    "name": "2"
                                 },
                                 "set-community": {
                                    "community": "extended:color:1000",
                                    "criteria": "append"
                                 },
                                 "additional-community": [
                                    {
                                       "community": "extended:as4-nn2:64513:1001",
                                       "criteria": "append"
                                    }
                                 ]
                              }
                           ]
                        },
                        "route-policy": [
                           {
                              "profile": "outbound-rmap",
                              "match-and-set-group": [
                                 {
                                    "set-rules": "rule1",
                                    "order": "0",
                                    "action": "permit",
                                    "match-rules": [
                                       {
                                          "name": "matchrule1"
                                       }
                                    ]
                                 }
                              ]
                           }
                        ]
                     }
                  ]
               }
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI route intent in ready state",
               "description": "Validate the tenant service, has reached the ready state",
               "interval": "2000",
               "maxRetry": "10",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:dc-route-policy-plan=outbound-rmap/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "bodyContain",
                     "value": "\"reached\""
                  }
               ]
            }
         ],
         "postCheck": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "headerColor": "green",
               "title": "Remote peer overlay BGP table with colored ACI route that triggered low-delay ODN policy",
               "description": "Checking the slice overlay remote peer BGP table for the ACI route that colored 1000 trigger the low-delay ODN policy",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show bgp vrf VRF_Toyota 99.100.40.0/29" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "headerColor": "green",
               "title": "Remote peer overlay slice CEF table for ACI route forwaded using SRTE policy",
               "description": "Checking the slice overlay remote peer BGP table for the ACI route that colored 1000 trigger the low-delay ODN policy",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show cef vrf VRF_Toyota 99.100.40.0/29" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "SRTE",
               "headerColor": "green",
               "title": "Validation of SRTE table with new dynamic SRTE policy",
               "description": "",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show segment-routing traffic-eng policy color 1000 tabular" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "SRTE",
               "headerColor": "green",
               "title": "Validation of SRTE policy with color 1000 minimizing on delay",
               "description": "TBA",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show segment-routing traffic-eng policy color 1000" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Connectivity",
               "headerColor": "green",
               "title": "Validation of connectivity: gNodeB to UPF",
               "description": "",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-stats:output.result",
               "url": "/restconf/operations/devices/device=gNodeB_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "ping vrf ran 99.100.40.2" }
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "SRTE",
               "headerColor": "green",
               "title": "Validation SRTE forwading for slice traffic",
               "description": "TBA",
               "displayResponseAs": "text",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
               "method": "post",
               "expect": [],
               "data": {
                  "input": { "args": "show segment-routing traffic-eng forwarding policy color 1000 tabular" }
               }
            }
         ],
         "outcome": {
            "summaryText": "End to end connectivity between remote RAN site and UPF (minimum delay intent)",
            "elements": {
               "nodes": [
                  {
                     "data": { "id": "Overlay", "label": "Overlay" },
                     "position": { "x": 400, "y": -100 },
                     "classes": "size-xxxlg-rect l3vpn"
                  },
                  {
                     "data": { "id": "gNodeB_1", "label": "gNodeB_1" },
                     "position": { "x": -150, "y": 150 },
                     "classes": "size-lg antenna"
                  },
                  {
                     "data": { "id": "Node_1", "label": "Node_1" },
                     "position": { "x": 0, "y": 150 },
                     "classes": "size-lg router"
                  },
                  {
                     "data": { "id": "Node_3", "label": "Node_3" },
                     "position": { "x": 100, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_4", "label": "Node_4" },
                     "position": { "x": 100, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_5", "label": "Node_5" },
                     "position": { "x": 200, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_6", "label": "Node_6" },
                     "position": { "x": 200, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_7", "label": "Node_7" },
                     "position": { "x": 300, "y": 150 },
                     "classes": "labelRight router"
                  },
                  {
                     "data": { "id": "Node_8", "label": "Node_8" },
                     "position": { "x": 400, "y": 50 },
                     "classes": "router"
                  },
                  {
                     "data": { "id": "Node_9", "label": "Node_9" },
                     "position": { "x": 400, "y": 250 },
                     "classes": "labelBottom router"
                  },
                  {
                     "data": { "id": "Node_10", "label": "Node_10" },
                     "position": { "x": 500, "y": 150 },
                     "classes": "size-lg router"
                  },
                  {
                     "data": { "id": "ACI_DC", "label": "ACI_DC" },
                     "position": { "x": 750, "y": 150 },
                     "classes": "size-4xlg dc1"
                  },
                  {
                     "data": { "id": "UPF", "label": "UPF" },
                     "position": { "x": 900, "y": 150 },
                     "classes": "size-lg upf"
                  },
                  {
                     "data": { "id": "SR_PCE", "label": "SR_PCE" },
                     "position": { "x": -100, "y": 0 },
                     "classes": "size-lg highlight sr_pce"
                  },
                  {
                     "data": { "id": "APIC", "label": "APIC" },
                     "position": { "x": 750, "y": 0 },
                     "classes": "size-lg apic"
                  }
               ],
               "edges": [
                  {
                     "data": { "source": "Node_1", "target": "Node_3" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "source": "Node_1", "target": "Node_4" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_5" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "source": "Node_3", "target": "Node_6" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_5" }
                  },
                  {
                     "data": { "source": "Node_4", "target": "Node_6" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "source": "Node_5", "target": "Node_7" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "label": "High Latency", "source": "Node_5", "target": "Node_8" }
                  },
                  {
                     "data": { "source": "Node_6", "target": "Node_7" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "label": "High Latency", "source": "Node_6", "target": "Node_9" }
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_8" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "source": "Node_7", "target": "Node_9" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "source": "Node_8", "target": "Node_10" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "label": "EVPN", "source": "Node_10", "target": "ACI_DC" },
                     "classes": "curve-multiple dashed"
                  },
                  {
                     "data": { "label": "BGP_LU", "source": "Node_10", "target": "ACI_DC" },
                     "classes": "curve-multiple dashed"
                  },
                  {
                     "data": { "source": "Node_9", "target": "Node_10" },
                     "classes": "highlight"
                  },
                  {
                     "data": { "source": "gNodeB_1", "target": "Node_1" }
                  },
                  {
                     "data": { "source": "Node_10", "target": "ACI_DC" }
                  },
                  {
                     "data": { "source": "ACI_DC", "target": "UPF" }
                  },
                  {
                     "data": { "source": "Node_1", "target": "Overlay" },
                     "classes": "dashed"
                  },
                  {
                     "data": { "source": "Node_10", "target": "Overlay" },
                     "classes": "dashed"
                  }
               ]
            },
            "commands": {
               "Node_1": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng policy tabular",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng forwarding policy tabular ",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng forwarding policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota 99.100.40.0/29  (ACI tenant route)",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota 99.100.40.0/29" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show configuration commit changes last 1",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show configuration commit changes last 1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show running-config segment-routing",
                     "url": "/restconf/operations/devices/device=Node_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show running-config segment-routing" }
                     }
                  }
               ],
               "Node_10": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng policy tabular",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show segment-routing traffic-eng forwarding policy tabular ",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show segment-routing traffic-eng forwarding policy tabular" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp vrf VRF_Toyota 99.100.40.0/29 (ACI tenant route)",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota 99.100.40.0/29" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show bgp VRF_Toyota 99.1.112.0/24 (RAN side route)",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show bgp vrf VRF_Toyota 99.1.112.0/24" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show configuration commit changes last 1",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show configuration commit changes last 1" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show running-config segment-routing",
                     "url": "/restconf/operations/devices/device=Node_10/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show running-config segment-routing" }
                     }
                  }
               ],
               "SR_PCE": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show pce lsp summary",
                     "url": "/restconf/operations/devices/device=SR_PCE/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show pce lsp summary" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show pce lsp detail",
                     "url": "/restconf/operations/devices/device=SR_PCE/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show pce lsp detail" }
                     }
                  },
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
                     "title": "show pce ipv4 peer",
                     "url": "/restconf/operations/devices/device=SR_PCE/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "show pce ipv4 peer" }
                     }
                  }
               ],
               "gNodeB_1": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to UPF (deployed in ACI DC)",
                     "url": "/restconf/operations/devices/device=gNodeB_1/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf ran 99.100.40.2" }
                     }
                  }
               ],
               "UPF": [
                  {
                     "type": "request",
                     "useEndpoint": "NSO_RFS_DC_TRANSPORT",
                     "displayResponseAs": "text",
                     "objectPath": "tailf-ned-cisco-ios-stats:output.result",
                     "title": "Check connectivity to remote gNodeB",
                     "url": "/restconf/operations/devices/device=UPF/live-status/exec/any",
                     "method": "post",
                     "expect": [],
                     "data": {
                        "input": { "args": "ping vrf vlan_40 99.1.112.112" }
                     }
                  }
               ]
            }
         }
      },
      "cleanup": {
         "description": [
            "The follwoing procedure is required to clean and assure there is no corrupted service (i.e. Zombies services) left behind"
         ],
         "continueOnFail": false,
         "preCheck": [],
         "actions": [
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Delete",
               "headerColor": "red",
               "title": "Slice L3-VPN Overlay",
               "description": "Delete Toyota Slice L3VPN Overlay",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:flat-L3vpn=VRF_Toyota",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "headerColor": "green",
               "title": "Overlay cleanup",
               "description": "Validate that asynchronous clean-up for Toyota Slice L3VPN Overlay have been successfully (Response code 404)",
               "interval": "2000",
               "maxRetry": "30",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:flat-L3vpn-plan=VRF_Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "404"
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Delete",
               "headerColor": "red",
               "title": "Slice L3-VPN Route Policy",
               "description": "Delete Toyota Route Policy",
               "url": "/restconf/data/cisco-flat-L3vpn-fp:l3vpn-route-policy=RP-VRF_Toyota",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Delete",
               "headerColor": "red",
               "title": "ODN URLLC Templates",
               "description": "Delete the ODN URLLC template from the PE ad DCI routes",
               "url": "/restconf/data/cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template=URLLC",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_RFS_DC_TRANSPORT",
               "header": "Validation",
               "title": "ODN template cleanup",
               "headerColor": "green",
               "description": "Validate that asynchronous clean-up for ODN templates distributed throught the network infrastructure (Response code 404).",
               "interval": "2000",
               "maxRetry": "30",
               "url": "/restconf/data/cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template=URLLC",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "404"
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI DC controller l3out-security-service name",
               "description": "DC controller generates a dynamic name for the l3out-security-service, which is required for the next configuraiton steps. This value can be retrieved, from the tenant' state",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/tenant=Toyota/dct-l3-vpn=VRF_Toyota/modified",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["200", "404"]
                  }
               ],
               "match": {
                  "objectPath": "cisco-dc-transport:modified.services",
                  "regEx": "name='VRF_Toyota-([A-Za-z0-9]+)'",
                  "matchGroup": 1,
                  "storeAs": "l3out-security-service"
               }
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Delete",
               "headerColor": "red",
               "title": "Toyota l3out security (use the dynamic name i.e. VRF_Toyota-2147d066ba5b, retrieved in the previous step)",
               "description": "Deleting Toyota l3out security which include l3out EPG and its contract",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/l3out-security-service=VRF_Toyota-{{l3out-security-service}}",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "Tenant l3out-security-service cleanup",
               "description": "Validate that Toyota l3out security has been successfully removed (Response code 404)",
               "interval": "2000",
               "maxRetry": "30",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/l3out-security-service-plan=VRF_Toyota-{{l3out-security-service}}/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "404"
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Delete",
               "headerColor": "red",
               "title": "tenant l3out routing construct",
               "description": "Deleting Toyota tenant l3out",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/tenant=Toyota/dct-l3-vpn=VRF_Toyota",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "Tenant l3out cleanup",
               "description": "Validate that Toyota l3out has been successfully removed (Response code 404)",
               "interval": "2000",
               "maxRetry": "30",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/tenant=Toyota/dct-l3-vpn-plan=VRF_Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "404"
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Delete",
               "headerColor": "red",
               "title": "Infrastructure SR DC interconnect",
               "description": "Deleting infrastructure SR inteconnect that comprises of the EVPN overlay and BGP-LU underlay providing the stitching between the transport and DC.",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:tenant-service-plan=Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Delete",
               "headerColor": "red",
               "title": "APIC/ACI tenant route-policy",
               "description": "Deleting Toyota tenant route-policy is requited before being able to remove the actual tenant ",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:dc-route-policy=outbound-rmap",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI tenant route-policy cleanup",
               "description": "Validate that APIC/ACI tenant route-policy has been successfully removed (Response code 404)",
               "interval": "2000",
               "maxRetry": "30",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:dc-route-policy-plan=outbound-rmap/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "404"
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Delete",
               "headerColor": "red",
               "title": "Infrastructure SR DC interconnect",
               "description": "Deleting infrastructure SR inteconnect that comprises of the EVPN overlay and BGP-LU underlay providing the stitching between the transport and DC.",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/topology/dct-evpn-interconnect=APIC_1-unprotected",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "Tenant l3out cleanup",
               "description": "Validate that Toyota l3out has been successfully removed (Response code 404)",
               "interval": "2000",
               "maxRetry": "30",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network/topology/dct-evpn-interconnect-plan=APIC_1-unprotected/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "404"
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Delete",
               "headerColor": "red",
               "title": "DC inteconnect topology definition",
               "description": "Deleting DC inteconnect topology definition",
               "url": "/restconf/data/cisco-dc-transport:dc-transport-network=DC-PE-Network",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Delete",
               "headerColor": "red",
               "title": "APIC/ACI tenant",
               "description": "Deleting Toyota tenant",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:tenant-service=Toyota",
               "method": "delete",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": ["204", "404"]
                  }
               ]
            },
            {
               "type": "polling",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "APIC/ACI Tenant cleanup",
               "description": "Validate that APIC/ACI tenant Toyota (VRF, BD, EPG, contract) has been successfully removed (Response code 404)",
               "interval": "2000",
               "maxRetry": "30",
               "url": "/restconf/data/cisco-dc:dc-controller=APIC_1/cisco-dc:tenant-service-plan=Toyota/plan/component=ncs:self,self/state=ready/status",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "404"
                  }
               ]
            }
         ],
         "postCheck": [
            {
               "type": "request",
               "useEndpoint": "NSO_CFS",
               "header": "Validation",
               "headerColor": "green",
               "title": "Confirm there is no more zombie",
               "description": "Confirm that at the end of the cleaning stage there is no more zombie services left behind",
               "displayResponseAs": "json",
               "objectPath": "tailf-ned-cisco-ios-xr-stats:output.result",
               "url": "/restconf/data/zombies",
               "method": "get",
               "expect": [
                  {
                     "type": "codeIs",
                     "value": "204"
                  }
               ]
            }
         ],
         "outcome": {
            "summaryText": "Clean-up completed ! Ready to restart the demo."
         }
      }
   }
}
